@model GestHostel.Models.ChambreTypesHostelsModel


<h2>Modify Room</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Chambre</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.chambre.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.chambre.Nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.chambre.Nom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.chambre.DescCourte, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.chambre.DescCourte, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.chambre.DescCourte, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.chambre.DescLongue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.chambre.DescLongue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.chambre.DescLongue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hostels, "hostels", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select>
                    @foreach (var hostel in Model.hostels)
                    {
                        <option value="@hostel.Nom">@hostel.Nom</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.types, "types", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select>
                    @foreach (var types in Model.types)
                    {
                        <option value="@types.Libelle">@types.Libelle</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.chambre.Capacite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.chambre.Capacite, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.chambre.Capacite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.chambre.NbWc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.chambre.NbWc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.chambre.NbWc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.chambre.NbSdb, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.chambre.NbSdb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.chambre.NbSdb, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.chambre.Prix, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.chambre.Prix, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.chambre.Prix, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.chambre.EsTSupprimer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.chambre.EsTSupprimer)
                    @Html.ValidationMessageFor(model => model.chambre.EsTSupprimer, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group addPhotos">
            @Html.LabelFor(model => model.chambre.ChambrePhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="uploads" />
                @Html.ValidationMessageFor(model => model.chambre.ChambrePhoto, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="buttonAdd"><button id="addPhoto" type="button">Add photo</button></div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
    $("#addPhoto").click(function (e) {
        $(".addPhotos:first").clone().insertBefore("#addPhoto");
    });
    </script>
}


